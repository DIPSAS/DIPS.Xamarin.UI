<?xml version="1.0"
      encoding="utf-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:dxui="http://dips.xamarin.ui.com"
             xmlns:Sheet="clr-namespace:DIPS.Xamarin.UI.Samples.Controls.Sheet;assembly=DIPS.Xamarin.UI.Samples"
             xmlns:System="clr-namespace:System;assembly=netstandard"
             xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
             ios:Page.UseSafeArea="true"
             mc:Ignorable="d"
             x:Class="DIPS.Xamarin.UI.Samples.Controls.Sheet.SheetPage">
    <ContentPage.BindingContext>
        <Sheet:SheetPageViewModel />
    </ContentPage.BindingContext>
    <dxui:ModalityLayout>
        <dxui:ModalityLayout.Behaviors>
            <dxui:SheetBehavior IsOpen="{Binding IsSheetOpen}"
                                OnOpenCommand="{Binding OnOpenCommand}"
                                OnOpenCommandParameter="Opened"
                                OnCloseCommand="{Binding OnCloseCommand}"
                                OnCloseCommandParameter="Closed"
                                IsDraggable="{Binding IsDraggable}"
                                Alignment="{Binding Alignment}"
                                VerticalContentAlignment="{Binding VerticalContentAlignment}"
                                ContentColor="{Binding ContentColor}"
                                HeaderColor="{Binding HeaderColor}"
                                HandleColor="{Binding HandleColor}"
                                HasShadow="{Binding HasShadow}"
                                Position="{Binding Position}"
                                MinPosition="{Binding MinPosition}"
                                MaxPosition="{Binding MaxPosition}"
                                ActionCommand="{Binding ActionCommand}"
                                ActionCommandParameter="Hei"
                                CancelCommandParameter="Hei"
                                IsCancelButtonVisible="True"
                                Title="{Binding Title}"
                                ActionTitle="{Binding HasActionButton, Converter={dxui:BoolToObjectConverter FalseObject='', TrueObject=CanExecute}}"
                                BindingContextFactory="{Binding SheetViewModelFactory}"
                                CloseOnOverlayTapped="{Binding Source={x:Reference ShouldCloseOnOverlayTappedCheckbox}, Path=IsChecked}"
                                ShouldRememberPosition="{Binding ShouldRememberPosition}">
                <StackLayout>
                    <Label Text="{Binding Source={x:Reference entry}, Path=Text}" />
                    <Label Text="{Binding Source={x:Reference entry}, Path=Text}" />
                    <Label Text="{Binding Source={x:Reference entry}, Path=Text}" />
                    <Label Text="{Binding Source={x:Reference entry}, Path=Text}" />
                    <Label Text="{Binding Source={x:Reference entry}, Path=Text}" />
                    <Entry x:Name="entry"
                           Placeholder="TextEntry" />
                    <Button Text="Close sheet"
                            dxui:Modality.CloseOnClick="True" />
                </StackLayout>
            </dxui:SheetBehavior>
        </dxui:ModalityLayout.Behaviors>

        <ScrollView>
            <StackLayout Padding="5"
                         HorizontalOptions="Fill">
                <Button Text="Open sheet"
                        Command="{Binding OpenSheetCommand}" />

                <Label Text="Sheet properties"
                       FontSize="Title"
                       VerticalTextAlignment="Center" />

                <StackLayout Orientation="Horizontal"
                             HorizontalOptions="Fill">
                    <Label Text="IsDraggable"
                           VerticalTextAlignment="Center" />
                    <CheckBox IsChecked="{Binding IsDraggable}" />
                </StackLayout>

                <StackLayout Orientation="Horizontal"
                             HorizontalOptions="Fill">
                    <Label Text="Alignment"
                           VerticalTextAlignment="Center" />
                    <Picker SelectedItem="{Binding Alignment}">
                        <Picker.ItemsSource>
                            <x:Array Type="{x:Type dxui:AlignmentOptions}">
                                <dxui:AlignmentOptions>Bottom</dxui:AlignmentOptions>
                                <dxui:AlignmentOptions>Top</dxui:AlignmentOptions>
                            </x:Array>
                        </Picker.ItemsSource>
                    </Picker>
                </StackLayout>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Text="VerticalContentAlignment"
                           VerticalTextAlignment="Center" />
                    <Picker Grid.Column="1"
                            SelectedItem="{Binding VerticalContentAlignment}">
                        <Picker.ItemsSource>
                            <x:Array Type="{x:Type dxui:ContentAlignment}">
                                <dxui:ContentAlignment>Fit</dxui:ContentAlignment>
                                <dxui:ContentAlignment>Fill</dxui:ContentAlignment>
                            </x:Array>
                        </Picker.ItemsSource>
                    </Picker>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Text="HeaderColor"
                           VerticalTextAlignment="Center" />
                    <Entry Grid.Column="1"
                           TextColor="{Binding HeaderColor}"
                           Text="{Binding HeaderColor}" />
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Text="ContentColor"
                           VerticalTextAlignment="Center" />
                    <Entry Grid.Column="1"
                           TextColor="{Binding ContentColor}"
                           Text="{Binding ContentColor}" />
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Text="HandleColor"
                           VerticalTextAlignment="Center" />
                    <Entry Grid.Column="1"
                           TextColor="{Binding HandleColor}"
                           Text="{Binding HandleColor}" />
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Text="Title"
                           VerticalTextAlignment="Center" />
                    <Entry Grid.Column="1"
                           Text="{Binding Title}" />
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Text="HasActionButton"
                           VerticalTextAlignment="Center" />
                    <CheckBox Grid.Column="1"
                              IsChecked="{Binding HasActionButton}" />
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Text="HasShadow"
                           VerticalTextAlignment="Center" />
                    <CheckBox Grid.Column="1"
                              IsChecked="{Binding HasShadow}" />
                </Grid>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Text="Remember position when open / close"
                           VerticalTextAlignment="Center" />
                    <CheckBox Grid.Column="1"
                              Grid.Row="0"
                              IsChecked="{Binding ShouldRememberPosition}" />
                    <Label Grid.Column="0"
                           Grid.Row="1"
                           Text="Position"
                           VerticalTextAlignment="Center" />
                    <Label Grid.Column="1"
                           Grid.Row="1"
                           Text="{Binding Position}" />
                    <Slider Grid.Column="0"
                            Grid.ColumnSpan="2"
                            IsVisible="{Binding ShouldRememberPosition}"
                            Grid.Row="2"
                            Maximum="1"
                            Minimum="0"
                            MaximumTrackColor="Tomato"
                            MinimumTrackColor="Tomato"
                            Value="{Binding Position}" />
                </Grid>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Grid.Row="0"
                           Text="MinPosition"
                           VerticalTextAlignment="Center" />
                    <Slider Grid.Column="1"
                            Grid.Row="0"
                            Maximum="1"
                            Minimum="0"
                            MaximumTrackColor="Tomato"
                            MinimumTrackColor="Tomato"
                            Value="{Binding MinPosition}" />
                    <Label Grid.Column="0"
                           Grid.ColumnSpan="2"
                           Grid.Row="1"
                           Text="{Binding MinPosition}" />
                </Grid>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Grid.Row="0"
                           Text="MaxPosition"
                           VerticalTextAlignment="Center" />
                    <Slider Grid.Column="1"
                            Grid.Row="0"
                            Maximum="1"
                            Minimum="0"
                            MaximumTrackColor="Tomato"
                            MinimumTrackColor="Tomato"
                            Value="{Binding MaxPosition}" />
                    <Label Grid.Column="0"
                           Grid.ColumnSpan="2"
                           Grid.Row="1"
                           Text="{Binding MaxPosition}" />
                </Grid>

                <StackLayout>
                    <Label Text="Should close on overlay tapped" />
                    <CheckBox x:Name="ShouldCloseOnOverlayTappedCheckbox"
                              IsChecked="True" />
                </StackLayout>
                <Label Text="{Binding StateText, StringFormat='State: {0}'}"
                       IsVisible="{Binding StateText, Converter={dxui:IsEmptyConverter Inverted=True}}" />
            </StackLayout>
        </ScrollView>

    </dxui:ModalityLayout>
</ContentPage>